package frms.bre.panels;

import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import mysql.Database;
import others.Validation;

public class BREBorrow extends javax.swing.JPanel {

    public static String[] columns_books = new String[]{
        "bk_itemnumber", "bk_avail", "bk_title", "bk_author"
    };
    public static String[] columns_reports = new String[]{
        "rp_itemnumber", "rp_avail", "rp_title",
        "rp_author"
    };
    public static String[] columns_equip = new String[]{
        "eq_itemnumber", "eq_avail", "bir_prop_num", "eq_desc", "eq_serial_num"
    };
    public static String[] colh_books = new String[]{
        "Item Number", "Available", "Title", "Author"
    };
    public static String[] colh_reports = new String[]{
        "Item Number", "Available", "Title", "Author"
    };
    public static String[] colh_equip = new String[]{
        "Item Number", "Available", "BIR Property Number", "Description",
        "Serial Number"
    };
    public static ArrayList<String> item = new ArrayList<>();
    public static ArrayList<String> quantity = new ArrayList<>();
    public static int ctr = 0;
    public static int max = 0;

    /**
     * Creates new form BREBorrow
     */
    public BREBorrow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBorrowTitle = new javax.swing.JLabel();
        lblEmployeeNumber = new javax.swing.JLabel();
        txtEmployeeNumber = new javax.swing.JTextField();
        txtEmployeeName = new javax.swing.JTextField();
        lblItemsToBeBorrowed = new javax.swing.JLabel();
        btnRelease = new javax.swing.JButton();
        pnlContents = new javax.swing.JPanel();
        lblQuantity = new javax.swing.JLabel();
        scrItem = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        txtItemNumber = new javax.swing.JTextField();
        lblItemNumber = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        lblBorrowTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblBorrowTitle.setText("Borrow Item(s)");

        lblEmployeeNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblEmployeeNumber.setText("Employee Number:");

        txtEmployeeNumber.setColumns(10);
        txtEmployeeNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtEmployeeNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmployeeNumberKeyReleased(evt);
            }
        });

        txtEmployeeName.setEditable(false);
        txtEmployeeName.setColumns(32);
        txtEmployeeName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblItemsToBeBorrowed.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblItemsToBeBorrowed.setText("Item(s) to be borrowed:");

        btnRelease.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnRelease.setText("Release");
        btnRelease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReleaseActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblQuantity.setText("Quantity:");

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItem.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        scrItem.setViewportView(tblItem);

        txtItemNumber.setColumns(10);
        txtItemNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtItemNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemNumberKeyReleased(evt);
            }
        });

        lblItemNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblItemNumber.setText("Item Number:");

        txtQuantity.setColumns(5);
        txtQuantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnlContentsLayout = new javax.swing.GroupLayout(pnlContents);
        pnlContents.setLayout(pnlContentsLayout);
        pnlContentsLayout.setHorizontalGroup(
            pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrItem, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlContentsLayout.createSequentialGroup()
                        .addGroup(pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblItemNumber)
                            .addComponent(lblQuantity))
                        .addGap(18, 18, 18)
                        .addGroup(pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItemNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlContentsLayout.setVerticalGroup(
            pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblItemNumber)
                    .addComponent(txtItemNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrItem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnNext.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnNext.setText(">");
        btnNext.setEnabled(false);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnPrevious.setText("<");
        btnPrevious.setEnabled(false);
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBorrowTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEmployeeNumber)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblItemsToBeBorrowed)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(btnRelease))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(pnlContents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(btnPrevious)
                        .addGap(22, 22, 22)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBorrowTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeNumber)
                    .addComponent(txtEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblItemsToBeBorrowed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlContents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious)
                    .addComponent(btnAdd))
                .addGap(4, 4, 4)
                .addComponent(btnRelease)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnNext, btnPrevious});

    }// </editor-fold>//GEN-END:initComponents

    private void txtEmployeeNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmployeeNumberKeyReleased
        String name = "";
        if (frms.Home.database.isEmployeeExisted(txtEmployeeNumber.getText())) {
            name = Database.getEmployeeInfo[0] + ", "
                    + Database.getEmployeeInfo[1] + " "
                    + Database.getEmployeeInfo[2];
            txtEmployeeName.setText(name);
        } else {
            txtEmployeeName.setText(null);
        }
    }//GEN-LAST:event_txtEmployeeNumberKeyReleased

    private void btnReleaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReleaseActionPerformed
        if (frms.Home.database.isEmployeeExisted(txtEmployeeNumber.getText())
                && !item.isEmpty() && !quantity.isEmpty()) {
            new BorrowItems().setVisible(true);
            BorrowItems.setInfo();
        } else {
            JOptionPane.showMessageDialog(null,
                    "Please enter employee number, item(s) and quantity.");
        }
    }//GEN-LAST:event_btnReleaseActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (btnAdd.getText().equals("Add")) { //Add
            if (Validation.isN(txtItemNumber.getText()) && Validation.isN(txtQuantity.getText())) {
                if (frms.Home.database.isItemExisted(txtItemNumber.getText(), Integer.valueOf(txtItemNumber.getText().substring(0, 1)) - 1)) {
                    if (Validation.isInRange(1, Integer.valueOf(txtQuantity.getText()), Integer.valueOf(tblItem.getModel().getValueAt(0, 1).toString()))) {
                        item.add(ctr, txtItemNumber.getText());
                        quantity.add(ctr, txtQuantity.getText());
                        max++;
                        btnNext.setEnabled(true);
                        btnAdd.setText("Update");
                        JOptionPane.showMessageDialog(null, "Add successful.");
                    } else {
                        JOptionPane.showMessageDialog(null, "Check the available item.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter item number.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a value.");
            }
        } else { //Update
            if (Validation.isN(txtItemNumber.getText()) && Validation.isN(txtQuantity.getText())) {
                if (frms.Home.database.isItemExisted(txtItemNumber.getText(), Integer.valueOf(txtItemNumber.getText().substring(0, 1)) - 1)) {
                    if (Validation.isInRange(1, Integer.valueOf(txtQuantity.getText()), Integer.valueOf(tblItem.getModel().getValueAt(0, 1).toString()))) {
                        item.set(ctr, txtItemNumber.getText());
                        quantity.set(ctr, txtQuantity.getText());
                        JOptionPane.showMessageDialog(null, "Update successful.");
                    } else {
                        JOptionPane.showMessageDialog(null, "Check the available item.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter item number.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a value.");
            }

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtItemNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNumberKeyReleased
        try {
            if (txtItemNumber.getText().substring(0, 1).equals("1")) {
                tblItem.setModel(new DefaultTableModel(
                        frms.Home.database.getItemInfo(1, txtItemNumber.getText(),
                        columns_books), colh_books));
            } else if (txtItemNumber.getText().substring(0, 1).equals("2")) {
                tblItem.setModel(new DefaultTableModel(
                        frms.Home.database.getItemInfo(2, txtItemNumber.getText(),
                        columns_reports), colh_reports));
            } else if (txtItemNumber.getText().substring(0, 1).equals("3")) {
                tblItem.setModel(new DefaultTableModel(
                        frms.Home.database.getItemInfo(3, txtItemNumber.getText(),
                        columns_equip), colh_equip));
            } else {
                tblItem.setModel(new DefaultTableModel());
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_txtItemNumberKeyReleased

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        /* NAVIGATION */
        ctr++;
        if (ctr == max) {
            ctr = max;
            btnAdd.setText("Add");
            btnNext.setEnabled(false);
            btnPrevious.setEnabled(true);
            txtItemNumber.setText(null);
            txtQuantity.setText(null);
            tblItem.setModel(new DefaultTableModel());
        } else if (ctr < max) {
            txtItemNumber.setText(item.get(ctr));
            txtQuantity.setText(quantity.get(ctr));
            tblItem.setModel(new DefaultTableModel(
                    frms.Home.database.getItemInfo(digit(), txtItemNumber.getText(), column()), colh()));
            btnPrevious.setEnabled(true);
            btnAdd.setText("Update");
        }
        System.out.println(ctr);
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        /* NAVIGATION */
        txtItemNumber.setText(item.get(ctr - 1));
        txtQuantity.setText(quantity.get(ctr - 1));
        tblItem.setModel(new DefaultTableModel(
                frms.Home.database.getItemInfo(digit(), txtItemNumber.getText(), column()), colh()));
        ctr--;
        if (ctr == 0) {
            ctr = 0;
            btnNext.setEnabled(true);
            btnPrevious.setEnabled(false);
            btnAdd.setText("Update");
        } else if (ctr > 0) {
            btnNext.setEnabled(true);
            btnAdd.setText("Update");
        }
        System.out.println(ctr);
    }//GEN-LAST:event_btnPreviousActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAdd;
    public static javax.swing.JButton btnNext;
    public static javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnRelease;
    private javax.swing.JLabel lblBorrowTitle;
    private javax.swing.JLabel lblEmployeeNumber;
    private javax.swing.JLabel lblItemNumber;
    private javax.swing.JLabel lblItemsToBeBorrowed;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JPanel pnlContents;
    public static javax.swing.JScrollPane scrItem;
    public static javax.swing.JTable tblItem;
    public static javax.swing.JTextField txtEmployeeName;
    public static javax.swing.JTextField txtEmployeeNumber;
    public static javax.swing.JTextField txtItemNumber;
    public static javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    public static void setDefault() {
        txtEmployeeNumber.setText(null);
        txtEmployeeName.setText(null);
        txtItemNumber.setText(null);
        txtQuantity.setText(null);
        btnNext.setEnabled(false);
        btnPrevious.setEnabled(false);
        tblItem.setModel(new DefaultTableModel());
        btnAdd.setText("Add");
        item.clear();
        quantity.clear();
        ctr = 0;
        max = 0;
    }

    private int digit() {
        return Integer.valueOf(txtItemNumber.getText().substring(0, 1));
    }

    private String[] column() {
        String[] col = null;
        if (this.digit() == 1) {
            col = columns_books;
        } else if (this.digit() == 2) {
            col = columns_reports;
        } else if (this.digit() == 3) {
            col = columns_equip;
        }
        return col;
    }

    private String[] colh() {
        String[] col = null;
        if (this.digit() == 1) {
            col = colh_books;
        } else if (this.digit() == 2) {
            col = colh_reports;
        } else if (this.digit() == 3) {
            col = colh_equip;
        }
        return col;
    }
}
