package frms.bre.panels;

import java.util.*;
import javax.swing.table.*;
import mysql.Database;

/**
 *
 * @author RhysRoman
 */
public class BREReturn extends javax.swing.JPanel {

    private String employeenumber;
    public final String[] col_transact = {
        "itemnumber", "qty"
    };
    public final String[] colh_transact = {
        "Item Number", "Quantity"
    };
    ArrayList<String> borroweditems = new ArrayList<>();
    ArrayList<String> borrowedqty = new ArrayList<>();
    int ctr = 0;

    /**
     * Creates new form BREReturn
     */
    public BREReturn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReturnItems = new javax.swing.JLabel();
        lblEmployeeNumber = new javax.swing.JLabel();
        txtEmployeeNumber = new javax.swing.JTextField();
        txtEmployeeName = new javax.swing.JTextField();
        lblToBeReturned = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        scrReturn = new javax.swing.JScrollPane();
        tblReturn = new javax.swing.JTable();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();

        lblReturnItems.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblReturnItems.setText("Return Item(s)");

        lblEmployeeNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblEmployeeNumber.setText("Employee Number:");

        txtEmployeeNumber.setColumns(10);
        txtEmployeeNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtEmployeeNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmployeeNumberKeyReleased(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmployeeNumberKeyPressed(evt);
            }
        });

        txtEmployeeName.setEditable(false);
        txtEmployeeName.setColumns(20);
        txtEmployeeName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblToBeReturned.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblToBeReturned.setText("Item(s) to be returned:");

        btnReturn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        tblReturn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblReturn.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        scrReturn.setViewportView(tblReturn);

        btnLeft.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnLeft.setText("<");
        btnLeft.setEnabled(false);

        btnRight.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnRight.setText(">");
        btnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblReturnItems)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEmployeeNumber)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblToBeReturned)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(scrReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnLeft)
                        .addGap(18, 18, 18)
                        .addComponent(btnRight))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(btnReturn)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblReturnItems)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeNumber)
                    .addComponent(txtEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblToBeReturned)
                .addGap(18, 18, 18)
                .addComponent(scrReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLeft)
                    .addComponent(btnRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReturn)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
    }//GEN-LAST:event_btnReturnActionPerformed
    private void txtEmployeeNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmployeeNumberKeyReleased
        if (isEmployeeExisted(txtEmployeeNumber.getText())) {
            String sn, fn, mi; //Surname, firstname middle initial
            sn = getEmployeeInfo()[0];
            fn = getEmployeeInfo()[1];
            mi = getEmployeeInfo()[2];
            txtEmployeeName.setText(sn + ", " + fn + " " + mi);
        } else {
            txtEmployeeName.setText(null);
        }
    }//GEN-LAST:event_txtEmployeeNumberKeyReleased

    private void txtEmployeeNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmployeeNumberKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) { //press Enter Key
            getEmployeeNumber();
            for (int i = 0; i < getBorrowedItemNumber(txtEmployeeNumber.getText()).length; i++) {
                borroweditems.add(i, getBorrowedItemNumber(txtEmployeeNumber.getText())[i]);
                borrowedqty.add(i, getBorrowedItemQty(txtEmployeeNumber.getText())[i]);
//                tblReturn.setModel(new DefaultTableModel(
//                        frms.Home.database.getTransaction(borroweditems.get(0), col_transact), colh_transact));
                btnReturn.setVisible(true);
                btnRight.setEnabled(borroweditems.size() > 1);

            }
        }
    }//GEN-LAST:event_txtEmployeeNumberKeyPressed

    private void btnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightActionPerformed
        // TODO add your handling code here:
        ctr++;
        
    }//GEN-LAST:event_btnRightActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnLeft;
    public static javax.swing.JButton btnReturn;
    public static javax.swing.JButton btnRight;
    private javax.swing.JLabel lblEmployeeNumber;
    private javax.swing.JLabel lblReturnItems;
    public static javax.swing.JLabel lblToBeReturned;
    public static javax.swing.JScrollPane scrReturn;
    public static javax.swing.JTable tblReturn;
    public static javax.swing.JTextField txtEmployeeName;
    public static javax.swing.JTextField txtEmployeeNumber;
    // End of variables declaration//GEN-END:variables

    private boolean isEmployeeExisted(String empnumber) {
        return frms.Home.database.isEmployeeExisted(empnumber);
    }

    private static String[] getEmployeeInfo() {
        return Database.getEmployeeInfo;
    }

    private void getEmployeeNumber() {
        employeenumber = txtEmployeeNumber.getText();
    }

    public String[] getBorrowedItemNumber(String employeenumber) {
        return frms.Home.database.getBorrowedItemNumber(employeenumber);
    }

    public String[] getBorrowedItemQty(String employeenumber) {
        return frms.Home.database.getBorrowedItemQty(employeenumber);
    }

    public int getDigit(String number) {
        int digit = 0;
        try {
            digit = Integer.parseInt(number.substring(0, 1));
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        return digit;
    }
}
